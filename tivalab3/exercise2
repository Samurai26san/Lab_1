#include <stdint.h>
#include <stdbool.h>
#include "inc/hw_memmap.h"
#include "driverlib/sysctl.h"
#include "driverlib/gpio.h"

#define LED1 GPIO_PIN_0
#define LED2 GPIO_PIN_1
#define LED3 GPIO_PIN_0
#define LED4 GPIO_PIN_4

int main(void) {
    uint32_t sysclk;
    const uint32_t ports[] = { GPIO_PORTN_BASE, GPIO_PORTN_BASE, GPIO_PORTF_BASE, GPIO_PORTF_BASE };
    const uint8_t  pins[]  = { LED1, LED2, LED3, LED4 };

    sysclk = SysCtlClockFreqSet(SYSCTL_XTAL_25MHZ | SYSCTL_OSC_MAIN |
                                SYSCTL_USE_PLL | SYSCTL_CFG_VCO_320, 120000000);

    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPION);
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);

    while(!SysCtlPeripheralReady(SYSCTL_PERIPH_GPION));
    while(!SysCtlPeripheralReady(SYSCTL_PERIPH_GPIOF));

    GPIOPinTypeGPIOOutput(GPIO_PORTN_BASE, LED1 | LED2);
    GPIOPinTypeGPIOOutput(GPIO_PORTF_BASE, LED3 | LED4);

    while (1) {
        for (int s=0; s<4; s++) {
            // Apagar todos
            for (int j=0; j<4; j++) GPIOPinWrite(ports[j], pins[j], 0);
            // Encender el LED del estado
            GPIOPinWrite(ports[s], pins[s], pins[s]);
            // Retardo 2 seg
            SysCtlDelay(sysclk/3);  // 3 ciclos por instrucciÃ³n -> ~2s
        }
    }
}
